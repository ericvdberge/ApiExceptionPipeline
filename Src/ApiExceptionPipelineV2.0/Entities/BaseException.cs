using ApiExceptionPipelineV2._0.Interfaces;
namespace ApiExceptionPipelineV2._0.Entities
{
    // The properties of the Exception class are based on the RFC7807 standard
    // https://datatracker.ietf.org/doc/html/rfc7807
    public class BaseException: Exception, IException
    {
        /// <summary>
        /// "type" (string) - A URI reference [RFC3986] that identifies the
        /// problem type.This specification encourages that, when
        /// dereferenced, it provide human-readable documentation for the
        /// problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
        /// this member is not present, its value is assumed to be
        /// "about:blank".
        /// </summary>
        public string Type { get; init; } = string.Empty;
        /// <summary>
        /// "title" (string) - A short, human-readable summary of the problem
        /// type.It SHOULD NOT change from occurrence to occurrence of the
        /// problem, except for purposes of localization(e.g., using
        /// proactive content negotiation; see[RFC7231], Section&nbsp;3.4).
        /// </summary>
        public string Title { get; init; } = string.Empty;
        /// <summary>
        /// "status" (number) - The HTTP status code ([RFC7231], Section&nbsp;6)
        /// generated by the origin server for this occurrence of the problem.
        /// </summary>
        public int Status { get; init; }
        /// <summary>
        /// "status" (number) - The HTTP status code ([RFC7231], Section&nbsp;6)
        /// generated by the origin server for this occurrence of the problem.
        /// </summary>
        public string Detail { get; init; } = string.Empty;
        /// <summary>
        /// "instance" (string) - A URI reference that identifies the specific
        /// occurrence of the problem.It may or may not yield further
        /// information if dereferenced.
        /// </summary>
        public string Instance { get; init; } = string.Empty;
    }
}
